{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    servicio: localStorage.getItem('servicio') ? JSON.parse(localStorage.getItem('servicio')) : [],\n    datos: localStorage.getItem('datos') ? JSON.parse(localStorage.getItem('datos')) : []\n  },\n  getters: {\n    getServicio: state => state.servicio,\n    getDatos: state => state.datos\n  },\n  mutations: {\n    //servicios\n    addServicio(state, dato) {\n      state.servicio.push(dato);\n    },\n    deleteServicio(state, index) {\n      state.servicio.splice(index, 1);\n    },\n    limpiarServicio(state) {\n      state.servicio = [];\n    },\n    //DATOS\n    addDatos(state, dato) {\n      state.datos.push(dato);\n    },\n    deleteDatos(state, index) {\n      state.datos.splice(index, 1);\n    },\n    limpiarDatos(state) {\n      state.datos = [];\n    }\n  },\n  actions: {\n    //servicios\n    setServicio({\n      state,\n      commit\n    }, dato) {\n      commit('addServicio', dato);\n      localStorage.setItem('servicio', JSON.stringify(state.servicio));\n    },\n    setDeleteService({\n      commit\n    }, index) {\n      commit('deleteServicio', index);\n    },\n    limpiarServicio({\n      commit\n    }) {\n      commit('limpiarServicio');\n    },\n    //DATOS\n    setDatos({\n      state,\n      commit\n    }, dato) {\n      commit('addDatos', dato); // Utiliza la mutación para agregar el nuevo dato\n      localStorage.setItem('datos', JSON.stringify([...state.datos, dato])); // Guarda los datos actualizados en localStorage\n    },\n    setDeleteDatos({\n      commit\n    }, index) {\n      commit('deleteDatos', index);\n    },\n    limpiarDatos({\n      commit\n    }) {\n      commit('limpiarDatos');\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","servicio","localStorage","getItem","JSON","parse","datos","getters","getServicio","getDatos","mutations","addServicio","dato","push","deleteServicio","index","splice","limpiarServicio","addDatos","deleteDatos","limpiarDatos","actions","setServicio","commit","setItem","stringify","setDeleteService","setDatos","setDeleteDatos"],"sources":["C:/Users/Suri_RFG/Desktop/WORK/Telegram/ole/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    servicio: localStorage.getItem('servicio') ? JSON.parse(localStorage.getItem('servicio')) : [],\n    datos: localStorage.getItem('datos') ? JSON.parse(localStorage.getItem('datos')) : []\n  },\n  getters: {\n    getServicio: state => state.servicio,\n    getDatos: state => state.datos \n  },\n  mutations: {   //servicios\n    addServicio(state, dato) {\n      state.servicio.push(dato);\n    },\n    deleteServicio(state, index) {\n      state.servicio.splice(index, 1);\n    },\n    limpiarServicio(state) {\n      state.servicio = [];\n    },\n//DATOS\n    addDatos(state, dato) {\n      state.datos.push(dato);\n    },\n    deleteDatos(state, index) {\n      state.datos.splice(index, 1);\n    },\n    limpiarDatos(state) {\n      state.datos = [];\n    }\n  },\n  actions: { \n    //servicios\n    setServicio({ state, commit }, dato) {\n      commit('addServicio', dato);\n      localStorage.setItem('servicio', JSON.stringify(state.servicio));\n    },\n    \n    setDeleteService({ commit }, index) {\n      commit('deleteServicio', index);\n    },\n    limpiarServicio({ commit }) {\n      commit('limpiarServicio');\n    },\n//DATOS\n    setDatos({ state, commit }, dato) {\n      commit('addDatos', dato); // Utiliza la mutación para agregar el nuevo dato\n      localStorage.setItem('datos', JSON.stringify([...state.datos, dato])); // Guarda los datos actualizados en localStorage\n    },\n\n    setDeleteDatos({ commit }, index) {\n      commit('deleteDatos', index);\n    },\n    limpiarDatos({ commit }) {\n      commit('limpiarDatos');\n    }\n  }\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE;IAC9FG,KAAK,EAAEJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG;EACrF,CAAC;EACDI,OAAO,EAAE;IACPC,WAAW,EAAER,KAAK,IAAIA,KAAK,CAACC,QAAQ;IACpCQ,QAAQ,EAAET,KAAK,IAAIA,KAAK,CAACM;EAC3B,CAAC;EACDI,SAAS,EAAE;IAAI;IACbC,WAAWA,CAACX,KAAK,EAAEY,IAAI,EAAE;MACvBZ,KAAK,CAACC,QAAQ,CAACY,IAAI,CAACD,IAAI,CAAC;IAC3B,CAAC;IACDE,cAAcA,CAACd,KAAK,EAAEe,KAAK,EAAE;MAC3Bf,KAAK,CAACC,QAAQ,CAACe,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACjC,CAAC;IACDE,eAAeA,CAACjB,KAAK,EAAE;MACrBA,KAAK,CAACC,QAAQ,GAAG,EAAE;IACrB,CAAC;IACL;IACIiB,QAAQA,CAAClB,KAAK,EAAEY,IAAI,EAAE;MACpBZ,KAAK,CAACM,KAAK,CAACO,IAAI,CAACD,IAAI,CAAC;IACxB,CAAC;IACDO,WAAWA,CAACnB,KAAK,EAAEe,KAAK,EAAE;MACxBf,KAAK,CAACM,KAAK,CAACU,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC9B,CAAC;IACDK,YAAYA,CAACpB,KAAK,EAAE;MAClBA,KAAK,CAACM,KAAK,GAAG,EAAE;IAClB;EACF,CAAC;EACDe,OAAO,EAAE;IACP;IACAC,WAAWA,CAAC;MAAEtB,KAAK;MAAEuB;IAAO,CAAC,EAAEX,IAAI,EAAE;MACnCW,MAAM,CAAC,aAAa,EAAEX,IAAI,CAAC;MAC3BV,YAAY,CAACsB,OAAO,CAAC,UAAU,EAAEpB,IAAI,CAACqB,SAAS,CAACzB,KAAK,CAACC,QAAQ,CAAC,CAAC;IAClE,CAAC;IAEDyB,gBAAgBA,CAAC;MAAEH;IAAO,CAAC,EAAER,KAAK,EAAE;MAClCQ,MAAM,CAAC,gBAAgB,EAAER,KAAK,CAAC;IACjC,CAAC;IACDE,eAAeA,CAAC;MAAEM;IAAO,CAAC,EAAE;MAC1BA,MAAM,CAAC,iBAAiB,CAAC;IAC3B,CAAC;IACL;IACII,QAAQA,CAAC;MAAE3B,KAAK;MAAEuB;IAAO,CAAC,EAAEX,IAAI,EAAE;MAChCW,MAAM,CAAC,UAAU,EAAEX,IAAI,CAAC,CAAC,CAAC;MAC1BV,YAAY,CAACsB,OAAO,CAAC,OAAO,EAAEpB,IAAI,CAACqB,SAAS,CAAC,CAAC,GAAGzB,KAAK,CAACM,KAAK,EAAEM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;IAEDgB,cAAcA,CAAC;MAAEL;IAAO,CAAC,EAAER,KAAK,EAAE;MAChCQ,MAAM,CAAC,aAAa,EAAER,KAAK,CAAC;IAC9B,CAAC;IACDK,YAAYA,CAAC;MAAEG;IAAO,CAAC,EAAE;MACvBA,MAAM,CAAC,cAAc,CAAC;IACxB;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}